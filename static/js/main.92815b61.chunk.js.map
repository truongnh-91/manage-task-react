{"version":3,"sources":["components/TaskForm.js","components/TaskSearchControl.js","components/TaskSortControl.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","status","id","this","className","onClick","type","required","nextProps","prevState","task","Component","TaskSearchControl","onSearch","keyword","handleKeyDown","e","key","placeholder","onKeyDown","TaskSortControl","sortBy","sortValue","a","sort","by","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","TaskControl","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elmTasks","map","App","onToggleForm","isDisplayForm","taskEditing","onShowForm","data","generateId","push","_","findIndex","localStorage","setItem","JSON","stringify","newTasks","splice","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","trim","toLocaleLowerCase","b","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92815b61.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n        id : '',\r\n        name : '',\r\n        status : true\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState){\r\n      if((nextProps && nextProps.task) &&(nextProps.task.id !== prevState.id)){\r\n        return { \r\n                  id: nextProps.task.id,\r\n                  name: nextProps.task.name,\r\n                  status: nextProps.task.status\r\n        };\r\n      }\r\n      else if(!nextProps.task) {\r\n          if(prevState.id === \"\"){\r\n          return {\r\n            id: prevState.id,\r\n            name: prevState.name,\r\n            status: prevState.status\r\n          }\r\n        }\r\n        else{  \r\n          return{\r\n            id: \"\",\r\n            name: \"\",\r\n            status: false\r\n          };\r\n        }\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n  }\r\n  \r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  }\r\n\r\n  onChange =(event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if(name === 'status'){\r\n      value = target.value === 'true'? true : false;\r\n    }\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onClear  = () => {\r\n    this.setState({\r\n      name : '',\r\n      status : false\r\n    });\r\n    this.onCloseForm();\r\n  }\r\n\r\n  render() {\r\n    var { id, name, status } = this.state;\r\n    return (\r\n        <div className=\"panel panel-warning\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\"> { id === '' ? 'Thêm Công Việc' : 'Cập Nhật Công Việc'}\r\n                  <span className=\"fa fa-times-circle text-right\"\r\n                        onClick={ this.onCloseForm }\r\n                  ></span>\r\n                </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <form onSubmit={ this.onSubmit }>\r\n                  <div className=\"form-group\">\r\n                    <label>Tên :</label>\r\n                    <input type=\"text\" \r\n                           className=\"form-control\" \r\n                           name='name'\r\n                           value={ name }\r\n                           onChange={ this.onChange }\r\n                    />\r\n                  </div>\r\n                  <label>Trạng Thái :</label>\r\n                  <select className=\"form-control\" \r\n                          required=\"required\"\r\n                          name='status'\r\n                          value={ status }\r\n                          onChange={ this.onChange }\r\n                  >\r\n                      <option value={true}>Kích Hoạt</option>\r\n                      <option value={false}>Ẩn</option>\r\n                  </select>\r\n                  <br />\r\n                  <div className=\"text-center\">\r\n                     <button type=\"submit\" className=\"btn btn-warning\">\r\n                       <span className=\"fa fa-plus mr-5\"></span>Lưu Lại\r\n                     </button>&nbsp;\r\n                     <button type=\"button\" \r\n                             className=\"btn btn-danger\"\r\n                             onClick={this.onClear}\r\n                     >\r\n                        <span className=\"fa fa-times mr-5\"></span>Hủy Bỏ\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\n\r\nclass TaskSearchControl extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword : ''\r\n    }\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n  \r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.onSearch();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keyword } = this.state;\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"input-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Nhập từ khóa...\" \r\n                    name = \"keyword\"\r\n                    value = { keyword }\r\n                    onChange = { this.onChange }\r\n                    onKeyDown={this.handleKeyDown}\r\n                />\r\n                <span className=\"input-group-btn\">\r\n                    <button \r\n                        className=\"btn btn-primary\" \r\n                        type=\"button\"\r\n                        onClick= { this.onSearch }\r\n                    >\r\n                        <span className=\"fa fa-search mr-5\" />Tìm\r\n                    </button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskSearchControl;","import React, { Component } from 'react';\r\n\r\nclass TaskSortControl extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            sort:{\r\n                by: 'name',\r\n                value: 1\r\n            }\r\n        }\r\n    }\r\n    \r\n    onClick = async(sortBy,sortValue) => {\r\n        await this.setState({\r\n            sort:{\r\n                by:sortBy,\r\n                value:sortValue\r\n            }\r\n        });\r\n        this.props.onSort(this.state.sort);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Sắp Xếp <span className=\"far fa-caret-square-down ml-5\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick ={ () => this.onClick('name', 1) }>\r\n                        <a role=\"button\">\r\n                            <span>\r\n                                <i className=\"fas fa-sort-alpha-down pr-5\"/>\r\n                                Tên A-Z\r\n                            </span>\r\n                            <i className={(this.state.sort.by==='name' && this.state.sort.value === 1)?'fas fa-check ml-5':''}/>\r\n                        </a>\r\n                    </li>\r\n                    <li onClick ={ () => this.onClick('name', -1) }>\r\n                        <a  role=\"button\">\r\n                            <span>\r\n                                <i className=\"fas fa-sort-alpha-up-alt pr-5\"/>\r\n                                Tên Z-A\r\n                            </span>\r\n                            <i className={(this.state.sort.by==='name' && this.state.sort.value === -1)?'fas fa-check ml-5':''}/>\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\" />\r\n                    <li onClick ={ () => this.onClick('status', 1) }>\r\n                        <a role=\"button\"> Trạng Thái Kích Hoạt\r\n                            <i className={(this.state.sort.by==='status' && this.state.sort.value === 1)?'fas fa-check ml-5':''}/>\r\n                        </a>\r\n                    </li>\r\n                    <li onClick ={ () => this.onClick('status', -1) }>\r\n                        <a role=\"button\"> Trạng Thái Ẩn\r\n                            <i className={(this.state.sort.by==='status' && this.state.sort.value === -1)?'fas fa-check ml-5':''}/>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskSortControl;","import React, { Component } from 'react';\r\nimport TaskSearchControl from './TaskSearchControl';\r\nimport TaskSortControl from './TaskSortControl';\r\n\r\nclass TaskControl extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"row mt-15\">\r\n            <TaskSearchControl onSearch = { this.props.onSearch }/>\r\n            <TaskSortControl onSort={ this.props.onSort }/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskControl;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n  onUpdateStatus = () => {\r\n    this.props.onUpdateStatus(this.props.task.id);\r\n  }\r\n\r\n  onDelete = () => {\r\n    this.props.onDelete(this.props.task.id);\r\n  }\r\n\r\n  onUpdate = () => {\r\n    this.props.onUpdate(this.props.task.id);\r\n  }\r\n\r\n  render() {\r\n    var { task, index} = this.props;\r\n    return (\r\n        <tr>\r\n            <td>{ index + 1 }</td>\r\n            <td>{ task.name }</td>\r\n            <td className=\"text-center\">\r\n              <span \r\n                  className={ task.status ? 'label label-success status': 'label label-danger status'}\r\n                  onClick={ this.onUpdateStatus }\r\n              >\r\n                { task.status ? 'Kích hoạt': 'Ẩn'}\r\n              </span>\r\n            </td>\r\n            <td className=\"text-center\">\r\n              <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-warning\"\r\n                  onClick={ this.onUpdate }\r\n              >\r\n                <span className=\"fa fa-edit mr-5\" />Sửa\r\n              </button>\r\n              &nbsp;\r\n              <button \r\n                  type=\"button\" \r\n                  className=\"btn btn-danger\"\r\n                  onClick={ this.onDelete }\r\n              >\r\n                <span className=\"fa fa-trash mr-5\" />Xóa\r\n              </button>\r\n            </td>\r\n        </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        filterName: '',\r\n        filterStatus: -1 // all: -1, active : 1, deactive :0\r\n    }\r\n  }\r\n  \r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.props.onFilter( name ===\"filterName\" ? value : this.state.filterName,\r\n                         name ===\"filterStatus\" ? value : this.state.filterStatus);\r\n    this.setState({\r\n      [name] : value\r\n    });\r\n  }\r\n\r\n  render() {\r\n      var { tasks } = this.props;\r\n      var { filterName, filterStatus } = this.state;\r\n      var elmTasks = tasks.map((task, index) =>{\r\n        return <TaskItem \r\n                  key = { task.id } \r\n                  index = {index} \r\n                  task = { task }\r\n                  onUpdateStatus = { this.props.onUpdateStatus }\r\n                  onDelete = { this.props.onDelete }\r\n                  onUpdate = { this.props.onUpdate }\r\n                />\r\n      });\r\n    return (\r\n      <div className=\"row mt-15\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n              <table className=\"table table-bordered table-hover\">\r\n                  <thead>\r\n                      <tr>\r\n                          <th className=\"text-center\">STT</th>\r\n                          <th className=\"text-center\">Tên</th>\r\n                          <th className=\"text-center\">Trạng Thái</th>\r\n                          <th className=\"text-center\">Hành Động</th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tr>\r\n                          <td/>\r\n                            <td>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    name=\"filterName\"\r\n                                    value={ filterName }\r\n                                    onChange={ this.onChange }\r\n                                />\r\n                            </td>\r\n                            <td>\r\n                                <select \r\n                                    className=\"form-control\"\r\n                                    name=\"filterStatus\"\r\n                                    value={ filterStatus }\r\n                                    onChange={ this.onChange }\r\n                                >\r\n                                    <option value={-1}>Tất Cả</option>\r\n                                    <option value={0}>Ẩn</option>\r\n                                    <option value={1}>Kích Hoạt</option>\r\n                                </select>\r\n                            </td>\r\n                          <td/>\r\n                      </tr>\r\n                      {elmTasks}\r\n                  </tbody>\r\n              </table>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      tasks : [],\n      isDisplayForm : false,\n      taskEditing : null,\n      filter : {\n        name: '',\n        status: -1\n      },\n      keyword : '',\n      sort :{\n        by: 'name',\n        value: 1\n      }\n    }\n  }\n\n  componentDidMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks : tasks\n      });\n    }\n  }\n\n  s4(){\n    return Math.floor((1+Math.random()) * 0x10000).toString().substring(1);\n  }\n\n  generateId(){\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4()\n    + '-' + this.s4() + this.s4() + '-' + this.s4() + this.s4() + '-' + this.s4() + this.s4();\n  }\n\n  onToggleForm = () => {\n    if(this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n          isDisplayForm : true,\n          taskEditing : null\n      });\n    } else {\n      this.setState({\n          isDisplayForm : !this.state.isDisplayForm,\n          taskEditing : null\n      });\n    }\n  }\n\n  onCloseForm = () =>{\n    this.setState({\n      isDisplayForm : false\n    });\n  }\n\n  onShowForm = () =>{\n    this.setState({\n      isDisplayForm : true\n    });\n  }\n\n  onSubmit = (data) => {\n    var { tasks } = this.state;\n      //Add\n      if (data.id === \"\") {\n        data.id = this.generateId();\n        tasks.push(data);\n      } else{\n        //Editting\n        const index = _.findIndex(tasks, (task) =>{\n            return task.id === data.id;\n        });\n        tasks[index] = data;\n      }\n    this.setState({\n      tasks : tasks,\n      taskEditing: null\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var newTasks = tasks.map(task => {\n        if (task.id === id) {\n          task.status = !task.status\n        }\n        return task;\n      })\n      this.setState({\n        tasks: newTasks\n      })\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  onDelete = (id) => {\n    var {tasks} = this.state;\n    const index = _.findIndex(tasks, (task) =>{\n      return task.id === id;\n  });\n    if(index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n            tasks : tasks\n        })\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks))\n    }\n    this.onCloseForm();\n  }\n\n  onUpdate = (id) => {\n    const {tasks} = this.state;\n    const index = _.findIndex(tasks, (task) => {\n        return task.id === id;\n    });\n    const taskEditing = tasks[index];\n    this.setState({\n        taskEditing : taskEditing\n    })\n    this.onShowForm();\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter:{\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  }\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyword : keyword\n    });\n  }\n\n  onSort = (sort) =>{\n        this.setState({\n          sort:{\n              by:sort.by,\n              value:sort.value\n          }\n      });\n  }\n\n  render() {\n    var { tasks, isDisplayForm, taskEditing, filter, keyword } = this.state;\n    var sortBy = this.state.sort.by;\n    var sortValue = this.state.sort.value;\n    if(filter){\n      if(filter.name){\n          tasks = tasks.filter((task) =>{\n              return  task.name.toLowerCase().indexOf(filter.name) !== -1;\n          })\n      }\n\n      tasks = tasks.filter((task) => {\n          if(filter.status === -1){\n            return tasks;\n          }else{\n            return task.status === (filter.status ===1 ? true : false);\n          }\n      })\n    }\n\n    if(keyword && keyword.trim() !==''){\n      tasks = tasks.filter((task) =>{\n        return task.name.toLowerCase().indexOf(keyword.toLocaleLowerCase()) !== -1;\n      })\n    }\n\n    if(sortBy === 'name'){\n        tasks.sort((a,b) => {\n          if( a.name > b.name ) return sortValue;\n          else if( a.name < b.name ) return -sortValue;\n          else return 0;\n        })\n    }\n    else{\n        tasks.sort((a,b) => {\n          if( a.status > b.status ) return -sortValue;\n          else if( a.status < b.status ) return sortValue;\n          else return 0;\n        })\n    }\n\n    var elmTaskForm = isDisplayForm \n                      ? <TaskForm \n                          onSubmit={ this.onSubmit } onCloseForm={ this.onCloseForm }\n                          task = { taskEditing }\n                        /> \n                      : '';\n    return (\n        <div className=\"container\">\n            <div className=\"text-center\">\n                <h1>Quản Lý Công Việc</h1>\n                <hr />\n            </div>\n            <div className=\"row\">\n                <div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                  { elmTaskForm }\n                </div>\n                <div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                  <button \n                      type=\"button\" \n                      className=\"btn btn-primary\"\n                      onClick={ this.onToggleForm }>\n                      <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\n                  </button>\n                <TaskControl onSearch = { this.onSearch }\n                             onSort = { this.onSort }        \n                />\n                <TaskList \n                      tasks = { tasks } \n                      onUpdateStatus = { this.onUpdateStatus }\n                      onDelete = { this.onDelete }\n                      onUpdate = { this.onUpdate }\n                      onFilter = { this.onFilter }\n                />\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}